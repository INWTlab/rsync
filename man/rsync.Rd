% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getData.R, R/getFile.R, R/listFiles.R,
%   R/removeAllFiles.R, R/removeFile.R, R/rsync.R, R/sendAllFiles.R,
%   R/sendFile.R, R/sendObject.R
\name{getData}
\alias{getData}
\alias{getData.default}
\alias{getFile}
\alias{getFile.default}
\alias{listFiles}
\alias{listFiles.default}
\alias{removeAllFiles}
\alias{removeAllFiles.default}
\alias{removeFile}
\alias{removeFile.default}
\alias{rsync}
\alias{sendAllFiles}
\alias{sendAllFiles.default}
\alias{sendFile}
\alias{sendFile.default}
\alias{sendObject}
\alias{sendObject.default}
\title{\code{removeFile} Remove a file from \code{dest}.}
\usage{
getData(db, ...)

\method{getData}{default}(db, fileName, verbose = FALSE, ...)

getFile(db, ...)

\method{getFile}{default}(db, fileName, validate = FALSE, verbose = FALSE, ...)

listFiles(db, ...)

\method{listFiles}{default}(db, ...)

removeAllFiles(db, ...)

\method{removeAllFiles}{default}(db, verbose = FALSE, ...)

removeFile(db, ...)

\method{removeFile}{default}(db, fileName, verbose = FALSE, ...)

rsync(dest, src = getwd(), password = NULL, ssh = NULL, sshProg = NULL)

sendAllFiles(db, ...)

\method{sendAllFiles}{default}(db, verbose = FALSE, ...)

sendFile(db, ...)

\method{sendFile}{default}(db, fileName, validate = FALSE, verbose = FALSE, ...)

sendObject(db, ...)

\method{sendObject}{default}(
  db,
  object,
  objectName = as.character(substitute(object)),
  validate = FALSE,
  verbose = FALSE,
  ...
)
}
\arguments{
\item{db}{(rsync) an object of class 'rsync' initialized with \code{rsync}.}

\item{...}{arguments passed to methods.}

\item{fileName}{(character) a file name that exists in \code{src}}

\item{verbose}{(logical) if we use 'vorbose' as option in the cli.}

\item{validate}{(logical) if the file in dest and src should be validated
using a sha256 check sum.}

\item{dest}{(character) the address to the rsync daemon or a folder.}

\item{src}{(character) a folder.}

\item{password}{(character|NULL) a password or file name in case a rsync
daemon is used.}

\item{ssh}{(character|NULL) argument is passed as '-e' option on the command
line. Can be used to further specify ssh settings.}

\item{sshProg}{(character|NULL) arguments sets the environment variable
'RSYNC_CONNECT_PROG' during the call. Can be used to setup a ssh connection
to a remote rsync daemon.}

\item{object}{(ANY) any R object you wish to store.}

\item{objectName}{(character) the name used to store the object. The file
extension will always be a 'Rdata'.}
}
\description{
Setup a rsync configuration. The configuration object can be used for access
to a folder.
}
\details{
\code{getData}: sync and load the contents of a file in \code{dest}. This
can be a Rdata file or a csv or json. The file will be saved in \code{src}.

\code{getFile} downloads a file from dest and saves it in src.

\code{removeAllFiles} remove all entries from \code{dest}. \code{src} will
not be affected.

\code{rsync} is a command line tool. For details see
  \url{https://rsync.samba.org/}. From the documentation:

\emph{There are two different ways for rsync to contact a remote system:
  using a remote-shell program as the transport (such as ssh or rsh) or
  contacting an rsync daemon directly via TCP. The remote-shell transport is
  used whenever the source or destination path contains a single colon (:)
  separator after a host specification. Contacting an rsync daemon directly
  happens when the source or destination path contains a double colon (::)
  separator after a host specification, OR when an rsync:// URL is specified
  (see also the "USING RSYNC-DAEMON FEATURES VIA A REMOTE-SHELL CONNECTION"
  section for an exception to this latter rule).}

Currently the rsync interface in this package only allows for remote
  locations in the destination.

\emph{You may also establish a daemon connection using a program as a  proxy
by setting the environment variable RSYNC_CONNECT_PROG to the commands
you wish to run in place of making a direct socket connection.} This can be
done using the \code{sshProg} argument.

\code{sendAllFiles} Sends all files in \code{src} to \code{dest} using \code{sendFile}.

\code{sendFile} Sends a file to a rsync object.

\code{sendObject} sends an object (from the environment)
  to a rsync target. This abstracts a pattern where you would use \link{save}
  followed by \code{sendFile}. The reverse is done using \code{getObject}
}
\examples{
\dontrun{
## Please consider examples in the Readme of this project. To get there run:
browseURL("https://github.com/INWTlab/rsync")

## Using rsync locally
rsync("~/someFolder")

## Examples for remote connections
rsync("rsync://user@host:port/volume", password = "~/my-pwd")
rsync("user@host:~/", ssh = "ssh -i./my-identity-file")
### requires (netcat) on the host
rsync("user@host::volume", sshProg = "ssh -i./my-identity-file host nc \%H 873")
}

}
